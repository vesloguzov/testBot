import json

subdivision_functions_count = 20
subdivision_count = 12

scheme = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
          [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
          [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],
          [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],
          [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],
          [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],
          [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],
          [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],
          [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],
          [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],
          [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
          [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

in_every_row = ["ц", "р", "п", "и"]


def check_answer(exp, ans):
    student_answer = json.loads(ans)["answer"]

    max_grade_1 = subdivision_functions_count
    grade_1 = 0

    for row in list(range(0, subdivision_functions_count)):
        student_row = [x.lower() for x in student_answer[row]]
        if all((item in student_row) for item in in_every_row):
            grade_1 = grade_1 + 1

    print(grade_1, "/", max_grade_1)

    # for let in in_every_row:

    # if student_row
    # print()

    print()

    print(student_answer)


answer_str = '''
{
  "answer": 
                [
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"],
                ["ц","р","п","И","у","с","с","у","с","с","п","у"]]
}
                '''

check_answer(False, answer_str)
